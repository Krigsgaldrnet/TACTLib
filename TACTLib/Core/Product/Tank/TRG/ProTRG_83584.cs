using static TACTLib.Core.Product.Tank.ManifestCryptoHandler;
using static TACTLib.Core.Product.Tank.ResourceGraph;

namespace TACTLib.Core.Product.Tank.TRG
{
	[ManifestCrypto(AutoDetectVersion = true, Product = TACTProduct.Overwatch)]
	public class ProTRG_83584 : ITRGEncryptionProc
	{
		public byte[] Key(TRGHeader header, int length)
		{
			byte[] buffer = new byte[length];
			uint kidx, okidx;
			kidx = okidx = Keytable[length + 256];
			for (uint i = 0; i != length; ++i)
			{
				buffer[i] = Keytable[SignedMod(kidx, 512)];
				kidx += (header.m_buildVersion * (uint)header.m_skinCount) % 7;
			}
			return buffer;
		}

		public byte[] IV(TRGHeader header, byte[] digest, int length)
		{
			byte[] buffer = new byte[length];
			uint kidx, okidx;
			kidx = okidx = Keytable[(digest[3] * Keytable[111]) & 511];
			for (int i = 0; i != length; ++i)
			{
				buffer[i] = Keytable[SignedMod(kidx, 512)];
				kidx += okidx % 61;
				buffer[i] ^= digest[SignedMod(kidx - i, SHA1_DIGESTSIZE)];
			}
			return buffer;
		}

		private static readonly byte[] Keytable =
		{
			0xA6, 0xFD, 0x06, 0x44, 0x25, 0xCA, 0xB7, 0x1B, 0x96, 0x2D, 0x6F, 0xDB, 0xB8, 0x94, 0xA0, 0xEE, 
			0xB9, 0x31, 0x18, 0xD8, 0x1F, 0xCF, 0xF3, 0xC1, 0xE9, 0xD5, 0x6C, 0x45, 0x04, 0x25, 0xBC, 0x25, 
			0x33, 0x17, 0xF7, 0xDC, 0xD0, 0x03, 0x47, 0x74, 0xED, 0xE4, 0xC6, 0x8E, 0xCE, 0x83, 0x2B, 0x93, 
			0x27, 0xAC, 0xF1, 0x49, 0x69, 0xFC, 0xAC, 0x67, 0x00, 0xAD, 0x1B, 0x46, 0xE1, 0x0B, 0x3F, 0x5F, 
			0x5C, 0xA6, 0x15, 0x9D, 0x8D, 0xC8, 0x53, 0xF2, 0x46, 0xEF, 0xC5, 0x1C, 0xF9, 0xEE, 0x7B, 0x80, 
			0x38, 0xF8, 0x1D, 0xD4, 0x96, 0x32, 0x01, 0x62, 0xF7, 0xEF, 0x3B, 0x3A, 0xE6, 0x0E, 0xF2, 0x8D, 
			0x2B, 0x9A, 0x5B, 0x18, 0x91, 0x6A, 0x98, 0x11, 0xC1, 0x96, 0xC5, 0xCA, 0xB1, 0xB2, 0xFD, 0xE3, 
			0xC4, 0x1D, 0x30, 0x80, 0x44, 0x3F, 0x57, 0xBE, 0x6B, 0x15, 0xC0, 0xF8, 0xF8, 0x4F, 0x6C, 0xF6, 
			0x59, 0xE5, 0x2C, 0xFD, 0x6D, 0x10, 0x81, 0x31, 0x3D, 0x64, 0x36, 0x60, 0xEC, 0xBA, 0x22, 0x49, 
			0xC5, 0x00, 0x31, 0x1C, 0x02, 0xB8, 0x72, 0xD3, 0xE6, 0x0F, 0x8C, 0x53, 0xA3, 0x6D, 0xC5, 0x3A, 
			0xF1, 0x5D, 0x1D, 0x24, 0x88, 0xEC, 0x68, 0x92, 0xAE, 0x2F, 0xE6, 0x8C, 0xBF, 0xF8, 0x6A, 0xBD, 
			0x65, 0x0A, 0x22, 0xF1, 0xD0, 0xAF, 0x83, 0xD7, 0x73, 0xA3, 0x01, 0xFE, 0x22, 0x3E, 0x51, 0xDA, 
			0x0E, 0xA7, 0xB8, 0x2E, 0x5D, 0x0D, 0x15, 0x6F, 0xF5, 0x7D, 0xE1, 0xD7, 0xD0, 0x1B, 0x17, 0xB3, 
			0x0A, 0x0B, 0x4B, 0xEC, 0x0F, 0x31, 0x06, 0xE9, 0xEC, 0x07, 0xDC, 0x79, 0xF3, 0x80, 0xA4, 0xDB, 
			0x4A, 0xCD, 0x7A, 0x48, 0xC2, 0x64, 0x53, 0x0B, 0x8C, 0xF5, 0x03, 0x32, 0x43, 0x41, 0xB1, 0xFA, 
			0x0E, 0x32, 0xEF, 0x8B, 0x6A, 0x1E, 0xB9, 0x7B, 0x09, 0x88, 0xFF, 0x47, 0xF3, 0x7D, 0x3D, 0x80, 
			0x7A, 0x72, 0x45, 0x31, 0xF1, 0x24, 0x17, 0xCC, 0x9B, 0xEB, 0xCB, 0x8E, 0x29, 0x7B, 0xF3, 0xFD, 
			0x7C, 0x23, 0x34, 0x93, 0x8A, 0xC6, 0x4A, 0xC5, 0x51, 0xCC, 0x05, 0xAC, 0xD4, 0xFC, 0x7B, 0xE8, 
			0x91, 0x5C, 0x6A, 0xA5, 0x1C, 0x0C, 0xB3, 0x5E, 0x26, 0xD8, 0xB6, 0xE6, 0xED, 0x25, 0xD8, 0x91, 
			0x3D, 0x20, 0x6C, 0x46, 0x72, 0x4C, 0xF6, 0xFF, 0x65, 0xFE, 0xA7, 0xC4, 0x39, 0xBE, 0x7C, 0x95, 
			0xF5, 0xEC, 0x3A, 0xB2, 0xEF, 0x25, 0x0A, 0x51, 0x7B, 0xB5, 0x5A, 0x09, 0x45, 0x88, 0xDC, 0x2D, 
			0x30, 0xFE, 0xA4, 0xCF, 0x1A, 0xFE, 0x4D, 0x83, 0xCA, 0xA8, 0xC2, 0x98, 0x4F, 0xD2, 0x7F, 0xE5, 
			0xD8, 0x91, 0x96, 0xD1, 0xE0, 0x35, 0x4A, 0x32, 0xDC, 0xBD, 0xD7, 0x60, 0x46, 0x30, 0x7A, 0x55, 
			0x18, 0xEC, 0x44, 0x19, 0xC5, 0xA8, 0x2E, 0x5A, 0x3A, 0xCF, 0xC0, 0xFE, 0xBC, 0x76, 0x1C, 0x30, 
			0x8F, 0x65, 0xB7, 0x0B, 0xF1, 0xB9, 0x39, 0x93, 0xC4, 0x72, 0x9D, 0x99, 0x95, 0xDA, 0xBD, 0xF3, 
			0x22, 0x2C, 0x81, 0x92, 0x6C, 0x60, 0x6B, 0xDB, 0xA2, 0xEB, 0xCD, 0x2F, 0xCC, 0x2E, 0x48, 0x75, 
			0x4E, 0x90, 0x89, 0xB5, 0x01, 0xA2, 0x50, 0x8D, 0x9F, 0xEE, 0x20, 0xB0, 0x2C, 0x20, 0xB9, 0x60, 
			0xAE, 0xE7, 0xD3, 0x61, 0x73, 0xC0, 0x98, 0xDE, 0x90, 0x97, 0xD6, 0xD6, 0xC1, 0x73, 0x5D, 0xAD, 
			0x2B, 0x05, 0x7B, 0xAD, 0x5A, 0xB8, 0x8B, 0x90, 0x3D, 0x20, 0xC9, 0x52, 0x88, 0xB9, 0x70, 0xCE, 
			0xAB, 0x75, 0x13, 0x21, 0xF1, 0xC5, 0xFE, 0x5F, 0x9F, 0xF5, 0x14, 0x2B, 0xE6, 0xCC, 0x71, 0x30, 
			0xE8, 0xBE, 0x97, 0x8B, 0x42, 0x33, 0x2C, 0xB7, 0x16, 0xFF, 0x45, 0x94, 0x78, 0x15, 0xA7, 0x41, 
			0xD3, 0x7D, 0x26, 0x3C, 0x0D, 0x95, 0x8E, 0x02, 0x6D, 0x87, 0x93, 0xD3, 0xB0, 0x2D, 0x25, 0xE4
		};
	}
}
